name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  setup-develop-env:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      # - name: webfactory/ssh-agent
      #   # You may pin to the exact commit or the version.
      #   # uses: webfactory/ssh-agent@5f066a372ec13036ab7cb9a8adf18c936f8d2043
      #   uses: webfactory/ssh-agent@v0.5.3
      #   with:
      #     # Private SSH key to register in the SSH agent
      #     ssh-private-key: ${{ secrets.CI_PRIVATE_KEY }}
      #     # ssh-auth-sock: # optional

      - name: Setup XiangShan environment
        run: |
            # git config --global url."https://github.com/".insteadOf git@github.com:
            # git config --global url."https://".insteadOf git://
            # ssh -vT git@github.com
            # sudo -s ./setup-tools.sh
            source ./setup.sh
      
      - name: Sim NutShell using Verilator
        run: |
            cd $GITHUB_WORKSPACE
            source ./env.sh
            cd $GITHUB_WORKSPACE/NutShell
            # make emu
            ./build/emu -b 0 -e 0 -i ./ready-to-run/microbench.bin

      
# Github hosted CI does not support XiangShan

#       - name: Sim XiangShan using Verilator
#         run: |
#             cd $GITHUB_WORKSPACE
#             source ./env.sh
#             cd $GITHUB_WORKSPACE/XiangShan
#             make emu CONFIG=MinimalConfig
#             ./build/emu -b 0 -e 0 -i ./ready-to-run/linux.bin
